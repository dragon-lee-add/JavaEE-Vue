<?xml version="1.0" encoding="UTF-8"?>  
<beans xmlns="http://www.springframework.org/schema/beans"  
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"  
        xmlns:aop="http://www.springframework.org/schema/aop"  
        xmlns:p="http://www.springframework.org/schema/p"  
        xmlns:tx="http://www.springframework.org/schema/tx"  
        xmlns:context="http://www.springframework.org/schema/context"  
        xsi:schemaLocation="   
            http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.5.xsd   
            http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-2.5.xsd   
            http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-2.5.xsd 
            http://www.springframework.org/schema/context 
            http://www.springframework.org/schema/context/spring-context.xsd">  
            
    <context:component-scan base-package="cn.smbms.service"/> 
    <context:component-scan base-package="cn.smbms.dao"/>  
    
    <!-- 读取数据库配置文件 -->
    <context:property-placeholder location="classpath:database.properties"/>
    
    <!-- JNDI获取数据源(使用dbcp连接池) -->  
    <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close" scope="singleton">
    		<property name="driverClassName" value="${driver}" />  
			<property name="url" value="${url}" />  
			<property name="username" value="${user}" />  
			<property name="password" value="${password}" />
			<property name="initialSize" value="${initialSize}"/>
			<property name="maxActive" value="${maxActive}"/>
			<property name="maxIdle" value="${maxIdle}"/>
			<property name="minIdle" value="${minIdle}"/>
			<property name="maxWait" value="${maxWait}"/>
			<property name="removeAbandonedTimeout" value="${removeAbandonedTimeout}"/>
			<property name="removeAbandoned" value="${removeAbandoned}"/>
			<!-- sql 心跳 -->
			<property name= "testWhileIdle" value="true"/>
			<property name= "testOnBorrow" value="false"/>
			<property name= "testOnReturn" value="false"/>
			<property name= "validationQuery" value="select 1"/>
			<property name= "timeBetweenEvictionRunsMillis" value="60000"/>
			<property name= "numTestsPerEvictionRun" value="${maxActive}"/>


    </bean>
    
    <!-- 事务管理 -->
   	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
   		<property name="dataSource" ref="dataSource"/>
   	</bean> 
   	
   	<!-- 配置mybitas SqlSessionFactoryBean-->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
    	<property name="dataSource" ref="dataSource"/>
    	<property name="configLocation" value="classpath:mybatis-config.xml"/>
		<property name="mapperLocations" value="classpath*:/cn/smbms/dao/*Mapper.xml"></property>
    </bean>
    
   	<!-- AOP 事务处理 开始 -->
	<!-- 定义切面类 -->
	<!-- 为添加注解的myLog类创建一个Bean -->
	<bean id="myLog" class="cn.smbms.interceptor.SysInterceptor" />
	<aop:config>
		<!-- 定义切点 -->
		<aop:pointcut expression="execution(* cn.smbms.service.*.*(..))" id="pointcut" />
		<!-- 引用切面类，设置各种通知 -->
		<aop:aspect ref="myLog">
			<!-- 将切面类中的beforeMethod方法设置为前置通知 -->
			<aop:before method="beforeMethod" pointcut-ref="pointcut"></aop:before>
			<!-- 将切面类中的afterMethod方法设置为后置通知，有返回值 -->
			<aop:after-returning method="afterMethod" pointcut-ref="pointcut"></aop:after-returning>
		</aop:aspect>
	</aop:config>

	<!--<aop:aspectj-autoproxy />-->
	<!--<aop:config  proxy-target-class="true">-->
		<!--<aop:pointcut expression="execution(* *cn.smbms.service..*(..))" id="transService"/>-->
		<!--<aop:advisor pointcut-ref="transService" advice-ref="txAdvice" />-->
	<!--</aop:config> -->
	<!--<tx:advice id="txAdvice" transaction-manager="transactionManager">  -->
	    <!--<tx:attributes>  -->
	       <!--<tx:method name="smbms*"  propagation="REQUIRED" rollback-for="Exception"  />-->
	    <!--</tx:attributes>  -->
	<!--</tx:advice> -->
	<!-- AOP 事务处理 结束 -->
	
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">  
         <property name="basePackage" value="cn.smbms.dao" />  
    </bean>


</beans>